name: Deploy Docker Image to Heroku App
on:
  push:
    branches:
      - main
    paths:
      - Dockerfile
      - entrypoint.sh
      - heroku.yml
      - nginx_mod.py
      - supervisord.conf
jobs:
  custom-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Heroku login credentials
        run: |
          cat > ~/.netrc <<EOF
            machine api.heroku.com
              login ${{ secrets.HEROKU_EMAIL }}
              password ${{ secrets.HEROKU_API_KEY }}
            machine git.heroku.com
              login ${{ secrets.HEROKU_EMAIL }}
              password ${{ secrets.HEROKU_API_KEY }}
          EOF

      - name: create app
        id: already_created
        run: |
          if heroku create ${{ secrets.HEROKU_APP_NAME }}; then
            echo "::set-output name=result::false"
          else
            echo "::set-output name=result::true"
          fi


      - name: check addons
        id: addons_exist
        run: |
          if heroku addons --app ${{ secrets.HEROKU_APP_NAME }} | grep '^No'; then
            echo "::set-output name=result::false"
          else
            echo "::set-output name=result::true"
          fi

      - if: steps.addons_exist.outputs.result == 'false'
        name: Install Postgres Addon
        run: heroku addons:create heroku-postgresql:hobby-basic --app ${{ secrets.HEROKU_APP_NAME }} --wait

      # - if: steps.already_created.outputs.result == 'false'
      - name: Gen alerta api key
        id: rand_vals
        run: |
          echo "::set-output name=username::$(cat /dev/urandom | tr -dc A-Za-z0-9 | head -c${1:-32})"
          echo "::set-output name=api_key::$(cat /dev/urandom | tr -dc A-Za-z0-9 | head -c${1:-32})"

      - if: steps.already_created.outputs.result == 'false'
        name: Set initial Config
        run: |
          heroku config:set -a ${{ secrets.HEROKU_APP_NAME }} \
            DEBUG=0  \
            AUTH_REQUIRED=1 \
            HEARTBEAT_POLL_TIME=30 \
            HOUSE_POLL_TIME=60 \
            PLUGINS=reject,blackout,normalise,enhance,pushover \
            ADMIN_USERS=${{ steps.rand_vals.outputs.username }} \
            ADMIN_KEY=${{ steps.rand_vals.outputs.api_key }} \
            ALERTA_API_KEY=${{ steps.rand_vals.outputs.api_key }}

      - if: steps.already_created.outputs.result == 'false'
        name: Set stack to container
        run: heroku stack:set container

      - name: Add remote
        run: heroku git:remote -a ${{ secrets.HEROKU_APP_NAME }}

      - name: Push to Heroku
        run: git push heroku HEAD:main
